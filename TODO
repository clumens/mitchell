- documentation:
   - documentation aimed more at actual users
   - write a formal semantics
   - think about a better documentation format
   - type checking rules for unions
   - audit all documentation for changes due to: union type, explicit
     polymorphism, and module opening keyword
- grammar:
   - add a keyword to open a module in the current scope
   - allow some sort of list pattern matching as a stop-gap for real
     pattern matching throughout
- misc:
   - need to think up a format for built modules that will allow us to
     suck in a symbol table for them during semantic analysis (preview-5)
   - proposal for C interface module
   - outline contents for runtime library
- output:
   - parser error messages can always be better (context, replacements, etc)
- symbol table / type checker:
   - add type information to standard library stubs
   - think about typing for empty lists
- testing:
   - automatic AST & simplification testing
