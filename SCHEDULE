Each section describes the features of the compiler that will be
completed/present at that release, or which actions will be taken at
release time.


preview-6 - type checking rewrite
=================================
- rewritten in sml
- working strict explicit polymorphic type system
- grammar frozen
- tagged as PREVIEW_6

preview-7 - simplified AST rewrite
==================================
- rewritten in sml
- conversion of AST into simplified AST
- front-end frozen (exception - serious bugs)
- tagged as PREVIEW_7

preview-8 - intermediate representation
=======================================
- conversion of simplified AST into IR
- front-end frozen (exception - serious bugs)
- tagged as PREVIEW_8

preview-9 - runtime / interpreter
=================================
- on-disk module format
- initial basic runtime library - magic C library module, other important bits
- runtime documentation and testing
- interpreter
- front-end frozen (exception - serious bugs)
- tagged as PREVIEW_9

preview-10 - miscellaneous fixes
================================
- builtin release for bug fixes and miscellaneous additions, may be
  removed if unneeded
? possible speed profiling and improvements, if needed
- tagged as PREVIEW_10

preview-11 - compiler
=====================
- instruction selection and register allocation targeting i386/ppc
- compiler front-end
- front-end and IR frozen (exception - serious bugs)
- complete basic runtime library consisting of C and mitchell components
- garbage collection in runtime
- runtime documentation and testing
- tagged as PREVIEW_11


test-1
======
- bug fixes from post-preview-11
- complete sml-based compiler
- complete base runtime
- initial language specification and compiler & runtime documentation
  NOTE:  this is not the V.1 language specification
- full test suite for compiler and runtime
- tagged as TEST_1


future
======
- future test releases should include additions to the language
  specification and runtime definition
- bootstrap releases may follow the test releases, if that's still a goal
  of the compiler
- bootstrap releases would roughly follow the same schedule as the preview 
  releases, but consist of rewriting mitchell compiler chunks in mitchell
  itself
- release-1 corresponds with a fully implemented compiler, runtime
  environment, and stabilized specification, and possibly bootstrapping
- post-release-1 releases will focus on performance and optimization, but
  no major changes to the V.1 language and runtime specs
